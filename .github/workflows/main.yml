name: Pipeline
run-name: Build and deploy
on: [push]
jobs:
  npm-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
  docker:
    needs: npm-build
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 
       
      - name: Login to Jfrog Artifactory
        uses: docker/login-action@v2
        with:
          registry: found.jfrog.io
          username: ${{ secrets.JF_USERNAME }}
          password: ${{ secrets.JF_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: found.jfrog.io/docker/${{ github.event.repository.name }}:${{ github.sha }}
         
 
  deployment:
    needs: [npm-build, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Installing Kubectl 
        uses: azure/setup-kubectl@v2.0
        with:
          version: v1.24.6
        id: install
        
      - name: Set the kube context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.KUBE_CONFIG}}
          context: foundation-production-admin
        id: setcontext
        
      - name: Creating image pull secret
        uses: Azure/k8s-create-secret@v4
        with:
          namespace: foundation-production
          container-registry-url: found.jfrog.io
          container-registry-username: ${{ secrets.JF_USERNAME }}
          container-registry-password: ${{ secrets.JF_PASSWORD }}
          secret-name: artifactory-image-pull-secret
        id: create-secret
        
      - name: Checkout the repo
        uses: actions/checkout@v3
        
      # - name: Deploy to Kubernetes cluster 
      #   uses: Azure/k8s-deploy@v4
      #   with:
      #    namespace: 'foundation-production'
      #    manifests: |
      #      deployment/deployment.yaml
      #      deployment/service.yaml
      #    images: 'found.jfrog.io/docker/${{ github.event.repository.name }}:${{ github.sha }}'
      #    imagepullsecrets: |
      #      artifactory-image-pull-secret
      #    strategy: canary
      #    action: deploy
      #    percentage: 30
      - name: 'Deploy'
        uses: 'deliverybot/helm@v1'
        with:
          release: 'hello-world'
          namespace: 'foundation-production'
          chart: 'hello-world'
          values: |
            name: hello-world
            replicas: 3
            app: hello-world
            port: 8080
            artifactoryUrl: "found.jfrog.io"
            dockerRepository: docker
            serviceName: ${{ github.event.repository.name }}
            serviceTag: ${{ github.sha }}
            serviceType: LoadBalancer
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBE_CONFIG }}'